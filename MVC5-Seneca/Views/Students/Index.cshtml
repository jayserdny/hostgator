@model IEnumerable<MVC5_Seneca.EntityModels.Student>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Index</title>
    </head>
    <body>
        <h4>Add/Edit Students</h4>
        <p>
            @Html.ActionLink("Create a New Student", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BirthDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GradeLevel)
                </th>                                                                                  
                <th>
                    @Html.DisplayNameFor(model => model.SpecialClass)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BirthDate)
                    </td>
                    <td style="text-align: right">
                        @switch (item.GradeLevel)
                        {
                            case -1:
                                @Html.Raw("Pre-K");
                                break;
                            case 0: 
                                @Html.Raw("Kindergarten");
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.GradeLevel);
                                break;
                            }                                                                                    
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SpecialClass)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </table>
        <div id="ReturnToDashboard">
            @Html.ActionLink("Return to Dashboard", "ReturnToDashboard", new { })
        </div>
    </body>
</html>