@model MVC5_Seneca.ViewModels.AddEditStudentViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
    <div>
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, "M")
                @Html.RadioButtonFor(model => model.Gender, "F")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GradeLevel, htmlAttributes: new { @class = "col-md-2" }) : 0 = Kindergarten, -1 = Pre-K (blank out the number if unknown)
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradeLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradeLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialClass, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialClass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Parent, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.Parent.Id, new SelectList(Model.Parents, "Value", "Text"), " Select")
                @Html.ValidationMessageFor(model => model.Parent.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.School.Id, new SelectList(Model.Schools, "Value", "Text"))
                @Html.ValidationMessageFor(model => model.School.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrimaryTutor, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.PrimaryTutor.Id, Model.Users)
                @Html.ValidationMessageFor(model => model.PrimaryTutor.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.Teacher.Id, Model.Teachers)
                @Html.ValidationMessageFor(model => model.Teacher.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "col-md-2" }) :   Determines whether student shows up on Display Student Information page.
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Save" />
            </div>
        </div>
    </div>
    }
    <br />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
